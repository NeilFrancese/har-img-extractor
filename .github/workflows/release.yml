name: Build and Release Executables

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install pyinstaller
          pip install -r requirements.txt



      - name: Build CLI and Flask executables
        run: |
          if [ "$RUNNER_OS" == "Windows" ]; then
            pyinstaller --onefile --name har-img-cli extract_images.py
            pyinstaller --onefile --name har-img-app --add-data "templates;templates" app.py
          elif [ "$RUNNER_OS" == "macOS" ]; then
            pyinstaller --onefile --name har-img-cli extract_images.py
            pyinstaller --onefile --name har-img-app --add-data "templates:templates" app.py
          else
            pyinstaller --onefile --name har-img-cli extract_images.py
            pyinstaller --onefile --name har-img-app --add-data "templates:templates" app.py
          fi
        shell: bash

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: executables-${{ runner.os }}
          path: dist/*

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: dist/**
          token: ${{ secrets.GH_RELEASE_TOKEN }}
